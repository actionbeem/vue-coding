{
  "post": [
    {
      "id": "DbQX4BJoV",
      "title": "Javascript",
      "description": "Make sure that the masonry library is included"
    },
    {
      "id": "J3a4UhwFo",
      "title": "Official Router",
      "description": "For most Single Page Applications, it’s recommended to use the officially-supported vue-router library. For more details, see vue-router’s documentation."
    },
    {
      "id": "t6QeW37Fp",
      "title": "Passing Static or Dynamic Props",
      "description": "So far, you’ve seen props passed a static value, like in:"
    },
    {
      "id": "qBfwkJ8mY",
      "title": "Unit Testing",
      "description": "Vue CLI has built-in options for unit testing with Jest or Mocha that works out of the box. We also have the official Vue Test Utils which provides more detailed guidance for custom setups."
    },
    {
      "id": "c231Y-B7P",
      "title": "Slot Content",
      "description": "This allows you to compose components like this:"
    },
    {
      "id": "tRxaKXKWE",
      "title": "Basics",
      "description": "Mixins are a flexible way to distribute reusable functionalities for Vue components. A mixin object can contain any component options. When a component uses a mixin, all options in the mixin will be “mixed” into the component’s own options."
    },
    {
      "id": "oiVAwKk7j",
      "title": "Simple State Management from Scratch",
      "description": "It is often overlooked that the source of truth in Vue applications is the raw"
    },
    {
      "id": "LawUwRu0r",
      "title": "Official Declaration in NPM Packages",
      "description": "Vue CLI provides built-in TypeScript tooling support. In our next major version of Vue (3.x), we are also planning to considerably improve our TypeScript support with built-in class based components API and TSX support."
    }
  ]
}